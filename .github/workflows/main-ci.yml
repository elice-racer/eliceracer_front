name: Main CI

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Create dotenv file
        run: |
          touch .env
          echo "VITE_BASE_URL=${{secrets.VITE_BASE_URL}}" >> .env
          echo "VITE_FIREBASE_API_KEY=${{secrets.VITE_FIREBASE_API_KEY}}" >> .env
          echo "VITE_FIREBASE_APP_ID=${{secrets.VITE_FIREBASE_APP_ID}}" >> .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{secrets.VITE_FIREBASE_AUTH_DOMAIN}}" >> .env
          echo "VITE_FIREBASE_MEASUREMENT_ID=${{secrets.VITE_FIREBASE_MEASUREMENT_ID}}" >> .env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{secrets.VITE_FIREBASE_MESSAGING_SENDER_ID}}" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=${{secrets.VITE_FIREBASE_PROJECT_ID}}" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{secrets.VITE_FIREBASE_STORAGE_BUCKET}}" >> .env
          echo "VITE_NOTIFICATIONS_URL=${{secrets.VITE_NOTIFICATIONS_URL}}" >> .env
          echo "VITE_SOKET_IO=${{secrets.VITE_SOKET_IO}}" >> .env
          echo "VITE_VAPID_KEY=${{secrets.VITE_VAPID_KEY}}" >> .env
          cat .env

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn # yarn으로 설정

      - name: Yarn install
        run: yarn

      - name: Yarn build
        run: yarn build

      - name: Configure AWS Credentials
        uses: aws-actions/cofigure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_NAME }}
          SOURCE_DIR: "dist"

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/*"
